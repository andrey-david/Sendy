from collections import Counter
import re
from data import data
import os
from aiogram.types import Message

async def Alex_podschot(folder, message: Message): #—Ñ—É–Ω–∫—Ü–∏—è –ø–æ–¥—Å—á—ë—Ç–∞
    exceptions = data['Alex_exceptions']
    all_text_to_message = []

    async def Alex_podschot_in(folder_in):
        text = ''
        holst = []
        banner = []
        hlopok = []
        matovi = []
        # —Å—á–∏—Ç–∞–µ—Ç –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Å–ø–∏—Å–∫–∏ —Ö–æ–ª—Å—Ç/–±–∞–Ω–Ω–µ—Ä/—Ö–ª–æ–ø–æ–∫
        for file in os.listdir(folder_in):
            if file.lower().endswith('.jpg') and '—Ö' in file:  # –∫–∏—Ä–∏–ª–ª–∏—Ü–∞
                name_of_file = file
                file = re.search(r"(\d+)—Ö(\d+)", file.lower())
                if file:
                    width, height = file.groups()
                    a = width + '√ó' + height
                    if '–º–∞—Ç–æ–≤—ã–π' in name_of_file.lower():
                        matovi.append(a)
                    elif '—Ö–æ–ª—Å—Ç' in name_of_file.lower():
                        holst.append(a)
                    elif '–±–∞–Ω–Ω–µ—Ä' in name_of_file.lower():
                        banner.append(a)
                    elif '—Ö–ª–æ–ø–æ–∫' in name_of_file.lower():
                        hlopok.append(a)
            elif os.path.isdir(folder_in + '\\' + file) and (file not in exceptions):
                await Alex_podschot_in(folder_in + '\\' + file)

        # —Å—á–∏—Ç–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –≤ —Å–ø–∏—Å–∫–µ –ø—Ä–∏—Å–≤–∞–∏–≤–∞—è –∏–º –∫–ª—é—á–∏ –≤ –≤–∏–¥–µ —Ä–∞–∑–º–µ—Ä–æ–≤ –∏ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –≤–∏–¥–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ –≤ —Å–ø–∏—Å–∫–µ (–ø—Ä–∏–º: Counter({'50√ó50': 9}) )
        banner_summ = Counter(banner)
        holst_summ = Counter(holst)
        hlopok_summ = Counter(hlopok)
        matovi_summ = Counter(matovi)

        # –µ—Å–ª–∏ –¥–ª–∏–Ω–∞ —Å–ø–∏—Å–∫–∞ –æ—Ç–ª–∏—á–Ω–∞ –æ—Ç –Ω—É–ª—è, —Ç–æ –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–ª—é—á –∏ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç counter –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é text
        if len(banner) > 0:
            text += '\n<b>–ë–ê–ù–ù–ï–†</b> ' + str(len(banner)) + '—à—Ç.\n'
            for i in range(len(banner_summ)):
                text += str(list(banner_summ.keys())[i]) + ' = ' + str(list(banner_summ.values())[i]) + '—à—Ç.\n'

        if len(holst) > 0:
            text += '\n<b>–•–û–õ–°–¢</b> ' + str(len(holst)) + '—à—Ç.\n'
            for i in range(len(holst_summ)):
                text += str(list(holst_summ.keys())[i]) + ' = ' + str(list(holst_summ.values())[i]) + '—à—Ç.\n'

        if len(hlopok) > 0:
            text += '\n<b>–•–õ–û–ü–û–ö</b> ' + str(len(hlopok)) + '—à—Ç.\n'
            for i in range(len(hlopok_summ)):
                text += str(list(hlopok_summ.keys())[i]) + ' = ' + str(list(hlopok_summ.values())[i]) + '—à—Ç.\n'

        if len(matovi) > 0:
            text += '\n<b>–ú–ê–¢–û–í–´–ô</b> ' + str(len(matovi)) + '—à—Ç.\n'
            for i in range(len(matovi_summ)):
                text += str(list(matovi_summ.keys())[i]) + ' = ' + str(list(matovi_summ.values())[i]) + '—à—Ç.\n'

        # —Å—á–∏—Ç–∞–µ—Ç –∏—Ç–æ–≥–æ –≤ –ø–∞–ø–∫–µ, –≤—ã–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç –≤ –Ω–∞—á–∞–ª–æ —Å—Ç—Ä–æ–∫–∏
        text = 'üìÅ ' + folder_in.split('\\')[-2] + '\n ‚îî‚îÄ <b>' + folder_in.split('\\')[-1] + '</b>: ' + str(
            len(holst) + len(banner) + len(hlopok) + len(matovi)) + '—à—Ç.\n' + text

        all_text_to_message.append(text) #—Å–æ–±–∏—Ä–∞–µ—Ç –≤–µ—Å—å –≤—ã–≤–æ–¥ –≤ –æ–¥–∏–Ω —Å–ø–∏—Å–æ–∫

    for element in os.listdir(folder):
        folder_in = folder + '\\' + element
        if os.path.isdir(folder_in) and (element not in exceptions): # –ø—Ä–æ–≤–µ—Ä–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ folder_in –ø–∞–ø–∫–æ–π –∏ –Ω–µ—Ç –ª–∏ –µ—ë –≤ —Å–ø–∏—Å–∫–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
            await Alex_podschot_in(folder_in)

    for i in all_text_to_message[::-1]: #–ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∏ –≤—ã–≤–æ–¥–∏—Ç –µ–≥–æ –≤ –≤–∏–¥–µ —Å–æ–æ–±—â–µ–Ω–∏–π
        await message.answer(text=i, parse_mode="HTML")